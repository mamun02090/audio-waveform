const data = [83, 260, 304, 364, 422, 180, 257, 323, 217, 84, 153, 506, 522, 294, 147, 257, 151, 139, 127, 153, 156, 137, 193, 428, 351, 184, 120, 166, 120, 115, 269, 569, 443, 196, 139, 142, 84, 140, 96, 96, 117, 273, 489, 275, 165, 187, 135, 192, 125, 101, 230, 274, 99, 106, 147, 98, 143, 98, 101, 234, 259, 215, 261, 161, 219, 181, 167, 141, 105, 96, 177, 96, 146, 222, 125, 132, 158, 133, 113, 219, 173, 276, 214, 136, 122, 85, 189, 90, 132, 167, 100, 100, 152, 140, 239, 147, 161, 103, 87, 200, 149, 76, 109, 96, 68, 92, 134, 80, 74, 155, 75, 164, 144, 126, 257, 117, 233, 289, 269, 528, 377, 225, 274, 216, 170, 216, 344, 307, 204, 170, 166, 156, 161, 138, 209, 181, 157, 413, 348, 267, 365, 193, 140, 136, 193, 219, 196, 235, 215, 152, 105, 118, 99, 184, 118, 138, 322, 397, 330, 198, 341, 104, 109, 112, 145, 187, 241, 150, 125, 101, 163, 126, 94, 134, 112, 176, 477, 389, 245, 477, 220, 193, 133, 146, 342, 185, 152, 131, 69, 77, 76, 168, 99, 153, 143, 431, 473, 228, 159, 201, 86, 124, 135, 300, 310, 156, 129, 222, 154, 74, 115, 103, 199, 99, 267, 339, 214, 267, 439, 98, 133, 84, 236, 387, 124, 147, 239, 141, 151, 130, 119, 111, 111, 178, 290, 193, 125, 310, 337, 117, 88, 81, 341, 261, 127, 137, 219, 215, 118, 91, 75, 125, 182, 301, 371, 98, 169, 233, 131, 205, 78, 207, 276, 130, 101, 191, 312, 147, 201, 197, 149, 103, 215, 262, 132, 158, 308, 254, 187, 144, 153, 365, 234, 115, 436, 256, 109, 410, 914, 765, 4820, 7354, 2962, 4344, 8113, 8573, 6915, 6885, 5613, 5059, 8873, 4454, 5989, 8081, 7409, 9366, 3752, 8649, 9242, 11411, 4807, 8117, 9038, 7598, 10770, 4684, 9314, 10090, 12173, 5389, 8111, 8563, 8341, 10969, 5931, 8274, 10357, 12514, 5102, 5814, 11186, 12197, 7414, 5693, 10072, 13168, 10428, 6649, 9336, 14147, 12475, 6770, 8351, 14208, 12643, 6874, 7614, 15157, 12977, 8157, 9594, 15493, 13968, 8234, 10626, 16073, 15165, 8694, 12697, 17677, 15621, 9075, 14324, 16148, 16745, 8865, 13625, 13729, 14475, 12983, 10338, 15075, 14876, 15401, 8132, 12474, 16564, 17414, 7241, 13113, 15283, 15165, 9452, 12315, 9152, 14952, 6929, 9915, 5504, 16945, 7958, 11153, 10273, 15767, 8514, 10913, 9276, 12406, 11034, 8661, 8205, 13835, 12190, 4431, 12771, 12602, 9389, 8838, 12940, 12670, 9268, 12535, 16398, 9284, 16736, 11056, 14582, 15555, 10495, 11723, 14068, 9781, 7182, 12719, 6738, 6364, 10816, 10689, 8845, 6750, 11507, 10062, 6233, 9308, 8299, 8718, 8228, 10093, 8285, 6488, 12585, 13690, 8475, 12410, 13368, 9644, 10529, 10703, 9395, 13575, 10797, 12545, 14095, 9704, 12334, 16727, 10292, 11960, 16631, 10209, 13418, 14727, 6220, 11001, 9286, 4231, 10123, 6555, 2157, 4937, 2787, 4008, 6468, 4483, 6306, 6808, 2738, 8485, 8667, 3396, 8024, 3828, 2380, 6126, 6437, 2648, 7303, 8198, 2943, 5818, 6239, 5071, 7262, 4480, 4552, 4764, 4662, 6052, 4088, 3012, 3652, 2429, 1391, 2388, 2701, 3064, 1666, 332, 1057, 1187, 3102, 1728, 1466, 1202, 1006, 1156, 1867, 2103, 2689, 1492, 1972, 2092, 1106, 604, 674, 738, 1002, 1319, 1647, 1057, 823, 709, 611, 982, 1178, 1341, 1114, 1095, 1536, 1569, 1561, 1193, 1229, 1230, 1592, 1433, 2135, 1073, 1497, 1914, 1603, 1592, 1147, 2379, 1229, 1443, 1569, 1640, 1517, 1497, 1245, 1484, 1582, 1380, 1426, 1440, 1461, 1557, 1489, 1633, 1323, 1671, 1476, 1702, 1603, 1702, 1496, 1161, 1664, 1387, 1828, 1473, 1822, 2018, 1512, 1159, 1267, 1563, 1711, 1287, 1844, 1608, 1723, 1948, 1782, 1591, 1209, 2509, 1822, 2323, 1614, 2259, 1943, 1991, 2361, 2413, 2371, 1523, 2378, 1647, 2328, 2240, 2390, 2044, 2083, 2121, 2022, 1992, 1854, 1489, 1198, 1229, 1073, 934, 923, 954, 711, 606, 638, 661, 798, 584, 558, 618, 715, 466, 704, 483, 685, 587, 579, 295, 405, 481, 574, 506, 309, 420, 430, 394, 548, 427, 428, 323, 336, 679, 340, 222, 291, 273, 286, 299, 271, 258, 282, 235, 331, 410, 237, 276, 193, 237, 263, 144, 403, 387, 373, 308, 430, 500, 221, 121, 123, 148, 243, 137, 160, 210, 155, 530, 435, 360, 417, 221, 227, 123, 183, 233, 122, 160, 237, 105, 117, 295, 266, 261, 457, 6349, 2959, 2426, 3916, 2360, 2124, 1058, 1543, 1767, 1302, 1396, 1276, 1744, 2789, 4319, 4738, 7828, 4875, 10650, 11986, 4264, 3307, 11536, 11495, 5851, 6213, 13485, 12647, 8813, 9991, 15103, 14938, 9893, 10606, 15434, 16563, 12440, 12841, 14084, 15958, 14301, 13930, 10723, 7246, 8385, 9553, 6311, 5469, 6181, 5336, 5845, 3894, 8222, 5097, 7389, 5955, 10562, 8075, 5368, 5575, 10850, 10146, 5196, 4561, 9940, 14433, 6298, 5606, 5156, 16433, 10834, 6579, 3119, 13847, 14786, 8269, 3630, 9043, 13913, 11414, 3780, 6408, 11954, 11614, 5166, 4855, 12486, 7899, 7009, 3067, 11713, 8580, 6388, 4519, 9643, 9559, 6110, 5005, 7143, 10411, 6942, 5170, 5952, 11693, 6837, 4501, 6351, 12114, 6168, 5923, 4884, 11809, 7825, 7453, 5875, 9949, 9254, 7176, 5935, 9660, 8807, 7087, 4929, 7981, 9903, 7222, 4469, 6562, 10719, 5797, 6103, 4669, 8462, 4711, 5996, 2657, 6997, 3395, 4960, 2316, 5897, 3590, 5472, 2047, 5151, 4625, 3836, 3646, 5636, 4734, 5490, 2854, 5152, 4242, 2916, 1580, 3607, 1667, 4648, 1309, 2156, 3201, 3236, 1207, 1190, 2991, 2312, 1342, 811, 934, 1976, 2095, 1521, 1350, 1357, 2406, 1640, 1814, 1729, 2016, 1396, 1085, 587, 1621, 1692, 807, 374, 788, 1347, 1010, 691, 332, 1195, 1051, 683, 384, 727, 1254, 1259, 656, 979, 1252, 1399, 743, 744, 1167, 1114, 886, 1067, 860, 1972, 1688, 1256, 1665, 1428, 1221, 1082, 1111, 1124, 1015, 1076, 835, 762, 1091, 916, 664, 806, 763, 632, 563, 397, 550, 376, 431, 353, 511, 887, 775, 492, 532, 420, 649, 592, 415, 523, 669, 576, 370, 522, 564, 592, 387, 454, 305, 908, 364, 258, 481, 302, 606, 296, 454, 292, 651, 271, 456, 258, 292, 349, 369, 393, 186, 329, 180, 633, 165, 140, 323, 151, 414, 142, 181, 175, 488, 210, 255, 110, 258, 162, 263, 138, 226, 365, 159, 584, 215, 157, 255, 336, 176, 208, 209, 168, 257, 226, 174, 261, 246, 164, 134, 230, 206, 386, 113, 255, 253, 169, 379, 197, 385, 257, 116, 217, 186, 273, 151, 119, 172, 219, 325, 294, 310, 125, 171, 159, 142, 90, 121, 213, 188, 157, 85, 91, 140, 48, 146, 91, 148, 142, 112, 237, 79, 139, 126, 166, 132, 126, 108, 53, 242, 118, 174, 150, 106, 99, 96, 136, 95, 179, 111, 125, 206, 198, 172, 126, 224, 134, 190, 155, 136, 295, 371, 428, 283, 361, 343, 253, 480, 220, 415, 366, 359, 380, 182, 211, 343, 431, 244, 546, 350, 264, 390, 368, 373, 555, 210, 271, 168, 330, 156, 215, 183, 322, 619, 237, 515, 357, 233, 484, 268, 217, 225, 640, 957, 1187, 976, 2127, 2783, 3655, 928, 2865, 4604, 4513, 1081, 1825, 5226, 3908, 1943, 1802, 2476, 4144, 3510, 2389, 1434, 3901, 3680, 4955, 2931, 1940, 4490, 3099, 4662, 2493, 2049, 3888, 2251, 3938, 2949, 1847, 3774, 1836, 2543, 4274, 1955, 3663, 2126, 2567, 3822, 1743, 4104, 2323, 1959, 4451, 2636, 3113, 2853, 1703, 4284, 3533, 2489, 3819, 476, 2226, 3976, 1716, 3746, 798, 997, 2916, 1538, 2521, 1044, 615, 1459, 3452, 1944, 2024, 1389, 1095, 3101, 1776, 3347, 1506, 896, 3593, 2301, 3211, 5222, 3754, 5291, 2921, 8265, 8767, 5624, 3615, 5834, 12117, 11841, 7185, 8722, 13636, 16169, 10719, 15243, 14339, 17385, 12611, 16627, 14001, 13816, 11511, 13797, 12897, 9587, 11986, 12829, 12915, 6519, 12786, 10778, 14497, 9621, 15421, 9108, 12298, 12817, 12410, 14873, 10964, 13193, 13196, 18134, 10479, 12830, 16642, 13269, 12090, 8297, 12183, 7903, 7607, 6350, 4232, 1596, 10556, 10351, 4572, 2830, 6989, 12830, 12715, 1678, 3703, 11369, 9190, 6210, 4800, 5009, 10678, 7291, 4869, 6173, 3484, 9551, 6615, 7923, 4194, 3788, 11171, 7283, 5499, 6185, 6999, 7828, 5025, 5528, 7122, 2422, 6266, 9372, 9121, 6426, 3411, 7058, 9337, 7828, 7073, 3871, 7211, 9898, 6911, 8291, 2602, 4796, 10358, 7627, 8812, 2483, 3298, 9912, 6093, 6819, 6218, 3991, 6436, 8418, 6168, 6923, 3833, 5602, 9327, 6687, 9729, 3251, 3352, 8475, 4686, 6185, 6007, 2180, 4653, 7353, 3322, 6347, 5274, 1427, 4437, 7846, 4314, 6289, 4622, 3328, 5201, 4390, 3933, 5338, 1567, 2442, 4587, 2998, 4169, 5375, 996, 2927, 4635, 1406, 3206, 3045, 1002, 3144, 2173, 793, 2060, 1761, 1188, 3457, 1884, 361, 1336, 2577, 1147, 2004, 719, 1490, 1902, 668, 996, 1849, 928, 761, 304, 499, 1226, 463, 239, 1127, 790, 681, 562, 1023, 1208, 682, 491, 386, 622, 669, 507, 245, 357, 434, 588, 533, 176, 198, 292, 220, 359, 332, 379, 324, 363, 425, 387, 326, 740, 447, 382, 158, 287, 220, 169, 180, 173, 277, 348, 368, 238, 343, 224, 519, 185, 1032, 2682, 2069, 1955, 4913, 2544, 1528, 2191, 2160, 759, 1422, 3346, 6981, 4637, 1409, 2771, 4106, 11526, 11678, 3864, 4458, 6259, 11776, 16492, 8126, 4279, 4493, 9961, 17679, 9904, 2938, 4561, 12129, 18377, 9616, 3563, 6903, 12526, 17719, 11771, 5374, 10294, 14467, 15371, 12357, 7731, 10757, 16504, 16736, 11632, 9573, 8352, 14116, 16675, 16898, 12489, 8881, 9443, 14624, 16202, 16738, 12060, 9540, 12960, 14168, 13891, 14207, 9910, 12762, 13825, 15995, 13159, 8650, 8377, 13026, 15159, 17356, 9964, 6344, 12359, 13072, 13372, 13480, 6606, 11104, 11191, 14851, 18240, 9475, 7217, 11439, 10766, 15324, 15692, 5969, 11467, 8824, 14150, 15486, 8639, 6504, 9523, 8599, 16865, 14671, 4107, 11098, 6172, 14688, 14453, 8055, 7483, 10601, 9570, 17812, 13399, 4768, 11990, 5528, 15870, 14653, 7455, 8202, 9601, 10733, 18753, 12060, 5880, 12132, 6712, 16063, 14028, 7471, 9240, 9607, 11405, 18738, 12915, 6888, 12060, 7690, 16156, 14368, 9294, 9038, 10992, 11914, 18482, 14115, 8247, 12313, 10265, 15091, 14465, 10554, 8707, 11498, 13027, 16917, 13609, 8983, 12361, 12928, 15520, 13319, 9503, 9068, 12268, 14068, 15735, 12630, 8611, 11643, 14212, 14793, 12136, 9328, 7556, 12661, 15859, 13812, 9456, 9226, 11345, 13836, 11886, 10415, 7293, 7791, 12145, 13683, 10001, 5646, 4331, 8579, 11996, 9673, 5980, 5010, 7485, 11165, 8505, 7496, 4509, 3412, 9838, 11443, 6815, 4187, 3538, 6225, 11245, 8555, 6230, 5007, 4895, 11442, 9747, 6426, 5631, 2324, 7486, 12407, 6981, 4979, 4757, 5556, 10628, 7764, 6528, 5253, 2048, 7913, 10908, 4889, 5515, 4341, 4527, 9665, 6071, 5519, 5874, 1902, 7725, 8357, 2843, 5140, 4309, 4018, 8513, 3774, 4989, 5393, 1905, 7105, 5992, 2244, 4290, 3883, 4031, 6666, 1921, 2817, 2608, 1346, 4250, 6745, 1669, 1410, 2509, 3008, 5126, 3237, 350, 1127, 3429, 2311, 4992, 336, 623, 2233, 2268, 2813, 2513, 555, 1575, 3478, 1407, 3148, 1646, 1074, 2354, 2012, 1148, 2901, 1146, 1140, 2771, 315, 1565, 2095, 666, 2160, 324, 579, 2476, 550, 1407, 1144, 469, 1103, 1131, 652, 1661, 371, 241, 1474, 574, 1133, 684, 569, 1411, 724, 180, 318, 410, 704, 1090, 273, 504, 314, 991, 1119, 479, 243, 366, 328, 568, 635, 188, 164, 210, 434, 992, 439, 135, 196, 541, 431, 325, 208, 302, 171, 345, 808, 353, 140, 330, 270, 430, 299, 367, 243, 424, 327, 400, 704, 256, 466, 454, 898, 610, 611, 1128, 812, 427, 879, 807, 402, 565, 685, 1205, 1597, 617, 852, 1416, 1225, 993, 518, 183, 533, 1235, 733, 669, 832, 354, 321, 929, 695, 441, 360, 459, 98, 173, 679, 536, 332, 571, 390, 524, 827, 417, 199, 136, 138, 370, 549, 347, 117, 105, 89, 212, 378, 602, 279, 199, 184, 116, 147, 182, 190, 251, 183, 138, 142, 403, 129, 205, 320, 341, 184, 144, 200, 203, 508, 300, 162, 169, 157, 253, 154, 176, 181, 79, 101, 157, 139, 223, 188, 296, 273, 138, 130, 203, 262, 211, 180, 165, 123, 108, 264, 266, 163, 168, 184, 115, 210, 157, 145, 164, 323, 523, 394, 102, 126, 170, 81, 372, 156, 445, 161, 145, 188, 217, 102, 129, 128, 302, 359, 591, 153, 154, 88, 92, 195, 122, 161, 129, 74, 119, 132, 213, 125, 140, 104, 129, 137, 260, 516, 305, 139, 125, 108, 136, 124, 168, 208, 127, 227, 123, 180, 84, 172, 133, 146, 106, 147, 123, 228, 166, 213, 99, 92, 85, 100, 108, 88, 162, 102, 79, 116, 80, 98, 167, 121, 88, 76, 116, 81, 73, 129, 86, 200, 159, 126, 96, 103, 96, 95, 128, 243, 104, 221, 110, 127, 93, 141, 115, 80, 219, 197, 96, 98, 96, 82, 102, 134, 263, 63, 125, 86, 290, 95, 98, 102, 105, 141, 239, 149, 68, 97, 60, 105, 121, 165, 116, 167, 172, 157, 251, 219, 355, 421, 268, 266, 239, 185, 231, 209, 147, 202, 364, 279, 227, 254, 195, 168, 168, 285, 390, 356, 349, 341, 159, 308, 263, 124, 181, 195, 239, 155, 267, 185, 167, 124, 250, 366, 366, 180, 352, 174, 358, 393, 158, 140, 189, 152, 304, 436, 131, 281, 154, 149, 267, 536, 278, 684, 262, 1101, 1096, 2166, 678, 1061, 3423, 5910, 3367, 3321, 2349, 1865, 6145, 3961, 3117, 3026, 1884, 3951, 5915, 3822, 3427, 3237, 4218, 6953, 3163, 4526, 3178, 4086, 6061, 2690, 2915, 2802, 4279, 3113, 6782, 1050, 1749, 3373, 4633, 5794, 1156, 2431, 2351, 3865, 2664, 5221, 1718, 1826, 3888, 3086, 3216, 4373, 2288, 3124, 3533, 2434, 4491, 2963, 1614, 3444, 2738, 1430, 5297, 2030, 1373, 2754, 2937, 3056, 4964, 997, 2327, 3724, 2668, 3395, 2822, 545, 2122, 3084, 1035, 3977, 2348, 297, 2062, 2514, 1434, 4445, 2218, 906, 1572, 2464, 1996, 4315, 1519, 1112, 423, 2340, 2466, 4555, 1241, 1372, 449, 2011, 3029, 4486, 1418, 2107, 1148, 2571, 3616, 4891, 1355, 1747, 974, 2408, 4005, 5092, 1136, 1468, 546, 2847, 4192, 4191, 984, 2595, 1150, 4371, 4630, 2766, 1209, 1255, 1188, 4788, 5423, 1375, 1008, 778, 4732, 6103, 2915, 529, 902, 2115, 6629, 7197, 734, 485, 1409, 5202, 7391, 4687, 720, 1246, 1806, 7547, 7469, 1249, 807, 821, 5762, 7735, 3296, 899, 461, 2717, 7433, 8508, 598, 1306, 1988, 7539, 9671, 2326, 1505, 1553, 4418, 9072, 8199, 1554, 2227, 2442, 8576, 10513, 3313, 4214, 1687, 5227, 11895, 7234, 3236, 5441, 3082, 8785, 13781, 3374, 6875, 3512, 8239, 13262, 8054, 6474, 6859, 8052, 13764, 11424, 8665, 7153, 8790, 13849, 16717, 9797, 7777, 7431, 11457, 18103, 13781, 6130, 7746, 10428, 14307, 16155, 6414, 7388, 11503, 14497, 17329, 7830, 8560, 9371, 4419, 10444, 7550, 1674, 10880, 10120, 14487, 12487, 7418, 7405, 10321, 4261, 2025, 3873, 3878, 1242, 5538, 12267, 14705, 4686, 5399, 6541, 3628, 2334, 2442, 9075, 5195, 2530, 6928, 15155, 10157, 4420, 6463, 8498, 3936, 3062, 5640, 8422, 5194, 2939, 5979, 13427, 13008, 4888, 6178, 8177, 3901, 3702, 3129, 4504, 4763, 6844, 4236, 4771, 12248, 12821, 10406, 4770, 9225, 5572, 3121, 6176, 2679, 1912, 2277, 5978, 5810, 783, 3543, 10114, 13698, 7237, 4946, 6295, 5342, 1353, 2505, 2639, 4465, 3872, 3527, 3006, 7597, 10994, 10848, 3400, 7829, 5964, 5532, 4377, 5340, 7089, 3067, 8696, 15319, 11101, 6527, 7733, 11321, 9322, 7821, 7206, 8300, 3742, 7291, 13342, 9535, 7119, 6086, 6965, 5982, 5662, 5011, 3379, 5776, 10041, 11606, 9942, 6543, 7314, 4794, 3397, 5324, 4832, 3212, 7360, 10547, 11396, 8033, 9808, 7155, 2107, 1649, 5093, 3901, 2218, 6271, 13827, 8057, 10602, 7546, 2906, 2285, 5345, 2911, 5021, 5517, 10801, 9096, 7641, 7365, 5553, 4991, 5721, 7358, 6987, 6702, 4844, 9828, 7561, 7525, 5270, 5449, 8277, 6715, 6898, 5765, 1896, 6761, 9938, 11506, 8502, 4952, 7716, 8749, 5511, 4192, 4261, 3689, 8309, 11687, 13150, 10707, 6351, 7538, 6212, 3499, 6492, 6039, 5077, 5104, 4504, 3574, 4979, 3950, 1634, 2404, 5394, 4203, 5861, 5470, 6352, 10379, 11299, 10108, 8444, 8861, 8740, 7688, 5021, 2539, 2949, 5135, 3595, 3825, 5426, 6100, 5010, 3647, 3331, 5227, 6913, 6327, 4153, 3996, 2892, 1225, 2930, 6990, 4109, 1262, 706, 1188, 1062, 1265, 1179, 869, 969, 1485, 1246, 3287, 3408, 2011, 2254, 4051, 3505, 1683, 741, 1733, 5954, 6136, 2499, 1837, 803, 995, 349, 396, 678, 1311, 965, 640, 1381, 1171, 2172, 3132, 2897, 1438, 763, 504, 3071, 2743, 465, 974, 1738, 2873, 4667, 2018, 771, 965, 1011, 632, 254, 1676, 2771, 3188, 2355, 865, 1982, 4236, 4213, 1001, 930, 513, 715, 262, 525, 430, 468, 1129, 1474, 2182, 1995, 681, 1195, 4063, 2741, 768, 390, 790, 1223, 470, 270, 2510, 2933, 782, 1053, 745, 2184, 1856, 1550, 865, 1010, 930, 268, 355, 578, 478, 1862, 1727, 721, 404, 578, 836, 1571, 1126, 1747, 1077, 2014, 1602, 493, 339, 307, 250, 466, 408, 183, 627, 551, 510, 867, 638, 875, 617, 678, 1067, 228, 464, 648, 535, 888, 238, 1296, 945, 703, 992, 232, 751, 857, 1598, 843, 541, 520, 492, 1042, 296, 300, 378, 245, 337, 120, 388, 311, 563, 682, 554, 212, 371, 150, 236, 381, 277, 316, 161, 210, 154, 181, 447, 219, 283, 278, 273, 131, 382, 414, 114, 154, 181, 216, 163, 105, 146, 115, 262, 152, 237, 258, 154, 129, 251, 220, 285, 192, 82, 128, 357, 168, 169, 138, 174, 177, 183, 207, 179, 201, 200, 306, 364, 445, 251, 240, 289, 670, 567, 882, 434, 831, 1376, 1040, 233, 718, 1346, 431, 334, 432, 847, 1282, 2677, 1778, 806, 2079, 519, 573, 223, 715, 1187, 1553, 1360, 410, 196, 825, 969, 916, 805, 446, 332, 362, 250, 860, 714, 543, 196, 107, 351, 514, 497, 244, 100, 64, 235, 114, 362, 195, 236, 127, 111, 200, 156, 194, 240, 100, 142, 176, 169, 178, 163, 134, 165, 206, 123, 111, 382, 183, 223, 413, 177, 467, 239, 501, 351, 150, 192, 106, 159, 173, 201, 431, 1666, 930, 641, 176, 377, 298, 170, 178, 207, 149, 254, 423, 319, 385, 327, 183, 202, 152, 99, 92, 106, 105, 164, 191, 235, 217, 152, 146, 309, 183, 224, 197, 206, 278, 257, 234, 215, 206, 131, 213, 223, 146, 148, 202, 132, 220, 207, 321, 146, 195, 135, 85, 140, 179, 100, 116, 191, 261, 292, 265, 172, 331, 75, 79, 303, 137, 143, 189, 95, 115, 127, 266, 384, 416, 177, 96, 252, 199, 323, 148, 247, 159, 156, 184, 189, 158, 114, 120, 108, 49, 6]



let canvas2 = document.getElementById('canvas2');
let canvas2Ctx = canvas2.getContext('2d');
canvas2Ctx.clearRect(0, 0, canvas2.offsetWidth, canvas2.height);
const dpr2 = window.devicePixelRatio || 1;
const padding2 = 10;
const canvas2Width = canvas2.offsetWidth;
const canvas2Height = canvas2.offsetHeight;

canvas2.width = canvas2Width * dpr2;
canvas2.height = (canvas2Height + padding2 * 2) * dpr2;
canvas2Ctx.scale(dpr2, dpr2);
// let bufferLength, dataArray;
// let isRecording = false;
let xPos2 = 0; // Starting x position for draw2ing the waveform
const silenceThreshold2 = 0.02; // Threshold to ignore small background noise
const canVas2Width = canvas2.offsetWidth || 500
const intervalTime2 = 10;
const time2Input = document.getElementById('time')
const time2r = document.getElementById('timer')
time2Input.value = 2.960;
let time2 = time2Input.value;
let widthContain2 = 0
let intervalId2;
const voiceThreshold = 10

const samples2 = 10;

// // equation to calculate the widthPerSample to match the time2
let widthSamplingRate2 = (intervalTime2 * canVas2Width) / (samples2 * time2 * 1000)

const maxAmplitude = Math.max(...data);


// Normalize the filtered data, but avoid normalizing to very low amplitudes
const normalizeAndCalcHeight = (filteredData) => {
    if (maxAmplitude === 0) return filteredData; // If everything is 0, don't normalize

    const multiplier = 1 / maxAmplitude;
    return filteredData.map(n => n * multiplier*canvas2Height*0.5);
};

const heightOfSpikes = normalizeAndCalcHeight(data)

const audioPlayer = document.getElementById('original-audio')

const dataToBeRendered = [...heightOfSpikes]
//trim and add the silence
const removeAndAddSilence = () => {
    const initialVoiceIndex = heightOfSpikes.findIndex(item => item > voiceThreshold);
    const reverseData = heightOfSpikes.slice().reverse();
    const lastVoiceIndex = reverseData.findIndex(item => item > voiceThreshold);
    let updatedTime = time2*1000;
    //add or remove from beginning
    if (initialVoiceIndex < 99) {
        const zeroArray = Array.from({length: 99 - initialVoiceIndex}, () => 0)
        console.log(zeroArray);
        dataToBeRendered.splice(0, 0, ...zeroArray)
        updatedTime += 99 - initialVoiceIndex;
        console.log(zeroArray);
    } else {
        dataToBeRendered.splice(0, initialVoiceIndex - 99);
        updatedTime -= initialVoiceIndex - 99;
    }

    //add or remove from end
    if (lastVoiceIndex < 99) {
        const zeroArray = Array.from({length: 99 - lastVoiceIndex}, () => 0)
        dataToBeRendered.splice(dataToBeRendered.length - 1, 0, ...zeroArray)
        updatedTime += 99 - lastVoiceIndex;
    } else {
        dataToBeRendered.splice(dataToBeRendered.length - lastVoiceIndex - 1 + 99, lastVoiceIndex - 99);
        updatedTime -= lastVoiceIndex - 99;
    }
    widthSamplingRate2 = (intervalTime2 * canVas2Width) / (samples2 * updatedTime)
}
removeAndAddSilence()



const originalAudioBtn = document.getElementById('originalAudio')
let isReplay = false
originalAudioBtn.addEventListener('click', () => {
    setupCanvas2()
    widthContain2 = 0
    let jsondata = [...dataToBeRendered]
    clearInterval(intervalId2)
    let count = 0;
   intervalId2 = setInterval(() => {
       if (widthContain2 < canvas.offsetWidth - 0.1) {
        isReplay = true
        // const normalizedData = normalizeAndCalcHeight(jsondata.splice(0,9)); // Normalize the current chunko
        // const normalizedData = normalizeAndCalcHeight([jsondata[count]]); // Normalize the current chunko
        // console.log(data.toSpliced(count, count + 99));
        draw2(jsondata.splice(0,9));
        count++;
        console.log(count);
    } else {
        console.log(widthContain2);
        widthContain2 = 0
        console.log('off');
        clearInterval(intervalId2)
    }
       
}, intervalTime2);
    audioPlayer.play()
})


function setupCanvas2() {
    canvas2 = document.getElementById('canvas2');
    canvas2Ctx = canvas2.getContext('2d');
    canvas2Ctx.clearRect(0, 0, canvas2.offsetWidth, canvas2.height);
    const dpr2 = window.devicePixelRatio || 1;
    const padding2 = 10;
    const canvas2Width = canvas2.offsetWidth;
    const canvas2Height = canvas2.offsetHeight;

    canvas2.width = canvas2Width * dpr2;
    canvas2.height = (canvas2Height + padding2 * 2) * dpr2;
    canvas2Ctx.scale(dpr2, dpr2);
    xPos2 = 0; // Reset x position when starting a new recording
}



let isVoice = true
// Draw2 the waveform on the canvas2 using draw2LineSegment2 style
const draw2 = (normalizedData) => {
    const canvas2Width = canvas2.offsetWidth;
    const canvas2Height = canvas2.height;
    let widthSample = (canvas2Width) / heightOfSpikes.length;
    // Don't clear the canvas2 so previous data remains
    // Draw2 each sample segment like before
    for (let i = 0; i < normalizedData.length; i++) {
        if (widthContain2 >= canvas2Width) {
            widthContain2 =500
            
            return; // Stop if the canvas2 width is reached
        }
        const x = xPos2;
        let height = normalizedData[i]; // Scale to half the canvas2 height
        // if (height > 10) {
        //     isVoice = true;
        // }
        if (isVoice) {
            draw2LineSegment2(canvas2Ctx, x, height, widthSample, (i + 1) % 2);
            // draw2LineSegment2(canvas2Ctx, x, height, widthSample);
            xPos2 += widthSamplingRate2; // Move to the next x position
        }
            // Use the same draw2LineSegment2 approach for the spikes

        
        widthContain2 += widthSample
        

    }
};

// Function to draw2 a line segment in the waveform (spike-like visualization) with Y-axis centered
let isEven = false
const draw2LineSegment2 = (ctx, x, y, width) => {
    ctx.lineWidth = 1; // how thick the line is
    ctx.strokeStyle = "blue"; // what color our line is
    ctx.fillStyle = "blue"
    ctx.beginPath();


    // Draw2 the line segment with Y-axis centered
    const centerY = canvas2.height / 2; // Middle of the canvas2 height
    y = isEven ? y : -y; // Invert every second segment for the spike effect

    ctx.moveTo(x, centerY); // Start at the center (Y = 0)
    if (y <voiceThreshold && y>-voiceThreshold ) {
        // Otherwise, draw2 the regular spike
        ctx.lineTo(x + width, centerY);
        ctx.stroke()
    } else {
        ctx.lineTo(x, centerY - y); // Draw2 a line up or down from the center
        ctx.lineTo(x + width, centerY); // End at the center again 
        ctx.fill();
    }
    // ctx.lineTo(x, x + width)
    // ctx.stroke();
    isEven= !isEven
   
};
draw2(dataToBeRendered)